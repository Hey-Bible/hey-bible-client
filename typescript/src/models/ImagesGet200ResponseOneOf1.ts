/* tslint:disable */
/* eslint-disable */
/**
 * Hey Bible App API
 * Public API for accessing Bible app data
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImagesGet200ResponseOneOf1ImagesInner } from './ImagesGet200ResponseOneOf1ImagesInner';
import {
    ImagesGet200ResponseOneOf1ImagesInnerFromJSON,
    ImagesGet200ResponseOneOf1ImagesInnerFromJSONTyped,
    ImagesGet200ResponseOneOf1ImagesInnerToJSON,
    ImagesGet200ResponseOneOf1ImagesInnerToJSONTyped,
} from './ImagesGet200ResponseOneOf1ImagesInner';

/**
 * Multiple images response (when ID is not specified)
 * @export
 * @interface ImagesGet200ResponseOneOf1
 */
export interface ImagesGet200ResponseOneOf1 {
    /**
     * Array of images (no signed URLs for performance)
     * @type {Array<ImagesGet200ResponseOneOf1ImagesInner>}
     * @memberof ImagesGet200ResponseOneOf1
     */
    images?: Array<ImagesGet200ResponseOneOf1ImagesInner>;
    /**
     * Number of images returned
     * @type {number}
     * @memberof ImagesGet200ResponseOneOf1
     */
    count?: number;
    /**
     * Current offset
     * @type {number}
     * @memberof ImagesGet200ResponseOneOf1
     */
    offset?: number;
    /**
     * Current limit
     * @type {number}
     * @memberof ImagesGet200ResponseOneOf1
     */
    limit?: number;
}

/**
 * Check if a given object implements the ImagesGet200ResponseOneOf1 interface.
 */
export function instanceOfImagesGet200ResponseOneOf1(value: object): value is ImagesGet200ResponseOneOf1 {
    return true;
}

export function ImagesGet200ResponseOneOf1FromJSON(json: any): ImagesGet200ResponseOneOf1 {
    return ImagesGet200ResponseOneOf1FromJSONTyped(json, false);
}

export function ImagesGet200ResponseOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ImagesGet200ResponseOneOf1 {
    if (json == null) {
        return json;
    }
    return {
        
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImagesGet200ResponseOneOf1ImagesInnerFromJSON)),
        'count': json['count'] == null ? undefined : json['count'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'limit': json['limit'] == null ? undefined : json['limit'],
    };
}

export function ImagesGet200ResponseOneOf1ToJSON(json: any): ImagesGet200ResponseOneOf1 {
    return ImagesGet200ResponseOneOf1ToJSONTyped(json, false);
}

export function ImagesGet200ResponseOneOf1ToJSONTyped(value?: ImagesGet200ResponseOneOf1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImagesGet200ResponseOneOf1ImagesInnerToJSON)),
        'count': value['count'],
        'offset': value['offset'],
        'limit': value['limit'],
    };
}

