/* tslint:disable */
/* eslint-disable */
/**
 * Hey Bible App API
 * Public API for accessing Bible app data
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VersesGet200ResponseOneOf1VersesInner } from './VersesGet200ResponseOneOf1VersesInner';
import {
    VersesGet200ResponseOneOf1VersesInnerFromJSON,
    VersesGet200ResponseOneOf1VersesInnerFromJSONTyped,
    VersesGet200ResponseOneOf1VersesInnerToJSON,
    VersesGet200ResponseOneOf1VersesInnerToJSONTyped,
} from './VersesGet200ResponseOneOf1VersesInner';

/**
 * Multiple verses response (when ID is not specified)
 * @export
 * @interface VersesGet200ResponseOneOf1
 */
export interface VersesGet200ResponseOneOf1 {
    /**
     * 
     * @type {Array<VersesGet200ResponseOneOf1VersesInner>}
     * @memberof VersesGet200ResponseOneOf1
     */
    verses?: Array<VersesGet200ResponseOneOf1VersesInner>;
    /**
     * Number of verses returned
     * @type {number}
     * @memberof VersesGet200ResponseOneOf1
     */
    count?: number;
    /**
     * Current offset
     * @type {number}
     * @memberof VersesGet200ResponseOneOf1
     */
    offset?: number;
    /**
     * Current limit
     * @type {number}
     * @memberof VersesGet200ResponseOneOf1
     */
    limit?: number;
}

/**
 * Check if a given object implements the VersesGet200ResponseOneOf1 interface.
 */
export function instanceOfVersesGet200ResponseOneOf1(value: object): value is VersesGet200ResponseOneOf1 {
    return true;
}

export function VersesGet200ResponseOneOf1FromJSON(json: any): VersesGet200ResponseOneOf1 {
    return VersesGet200ResponseOneOf1FromJSONTyped(json, false);
}

export function VersesGet200ResponseOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): VersesGet200ResponseOneOf1 {
    if (json == null) {
        return json;
    }
    return {
        
        'verses': json['verses'] == null ? undefined : ((json['verses'] as Array<any>).map(VersesGet200ResponseOneOf1VersesInnerFromJSON)),
        'count': json['count'] == null ? undefined : json['count'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'limit': json['limit'] == null ? undefined : json['limit'],
    };
}

export function VersesGet200ResponseOneOf1ToJSON(json: any): VersesGet200ResponseOneOf1 {
    return VersesGet200ResponseOneOf1ToJSONTyped(json, false);
}

export function VersesGet200ResponseOneOf1ToJSONTyped(value?: VersesGet200ResponseOneOf1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'verses': value['verses'] == null ? undefined : ((value['verses'] as Array<any>).map(VersesGet200ResponseOneOf1VersesInnerToJSON)),
        'count': value['count'],
        'offset': value['offset'],
        'limit': value['limit'],
    };
}

