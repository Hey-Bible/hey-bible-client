/* tslint:disable */
/* eslint-disable */
/**
 * Hey Bible App API
 * Public API for accessing Bible app data
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotesGet200ResponseOneOf1NotesInner } from './NotesGet200ResponseOneOf1NotesInner';
import {
    NotesGet200ResponseOneOf1NotesInnerFromJSON,
    NotesGet200ResponseOneOf1NotesInnerFromJSONTyped,
    NotesGet200ResponseOneOf1NotesInnerToJSON,
    NotesGet200ResponseOneOf1NotesInnerToJSONTyped,
} from './NotesGet200ResponseOneOf1NotesInner';

/**
 * Multiple notes response (when ID is not specified)
 * @export
 * @interface NotesGet200ResponseOneOf1
 */
export interface NotesGet200ResponseOneOf1 {
    /**
     * 
     * @type {Array<NotesGet200ResponseOneOf1NotesInner>}
     * @memberof NotesGet200ResponseOneOf1
     */
    notes?: Array<NotesGet200ResponseOneOf1NotesInner>;
    /**
     * Number of notes returned
     * @type {number}
     * @memberof NotesGet200ResponseOneOf1
     */
    count?: number;
    /**
     * Current offset
     * @type {number}
     * @memberof NotesGet200ResponseOneOf1
     */
    offset?: number;
    /**
     * Current limit
     * @type {number}
     * @memberof NotesGet200ResponseOneOf1
     */
    limit?: number;
}

/**
 * Check if a given object implements the NotesGet200ResponseOneOf1 interface.
 */
export function instanceOfNotesGet200ResponseOneOf1(value: object): value is NotesGet200ResponseOneOf1 {
    return true;
}

export function NotesGet200ResponseOneOf1FromJSON(json: any): NotesGet200ResponseOneOf1 {
    return NotesGet200ResponseOneOf1FromJSONTyped(json, false);
}

export function NotesGet200ResponseOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): NotesGet200ResponseOneOf1 {
    if (json == null) {
        return json;
    }
    return {
        
        'notes': json['notes'] == null ? undefined : ((json['notes'] as Array<any>).map(NotesGet200ResponseOneOf1NotesInnerFromJSON)),
        'count': json['count'] == null ? undefined : json['count'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'limit': json['limit'] == null ? undefined : json['limit'],
    };
}

export function NotesGet200ResponseOneOf1ToJSON(json: any): NotesGet200ResponseOneOf1 {
    return NotesGet200ResponseOneOf1ToJSONTyped(json, false);
}

export function NotesGet200ResponseOneOf1ToJSONTyped(value?: NotesGet200ResponseOneOf1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'notes': value['notes'] == null ? undefined : ((value['notes'] as Array<any>).map(NotesGet200ResponseOneOf1NotesInnerToJSON)),
        'count': value['count'],
        'offset': value['offset'],
        'limit': value['limit'],
    };
}

