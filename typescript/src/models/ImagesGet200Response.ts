/* tslint:disable */
/* eslint-disable */
/**
 * Hey Bible App API
 * Public API for accessing Bible app data
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImagesGet200ResponseImagesInner } from './ImagesGet200ResponseImagesInner';
import {
    ImagesGet200ResponseImagesInnerFromJSON,
    ImagesGet200ResponseImagesInnerFromJSONTyped,
    ImagesGet200ResponseImagesInnerToJSON,
    ImagesGet200ResponseImagesInnerToJSONTyped,
} from './ImagesGet200ResponseImagesInner';

/**
 * 
 * @export
 * @interface ImagesGet200Response
 */
export interface ImagesGet200Response {
    /**
     * 
     * @type {Array<ImagesGet200ResponseImagesInner>}
     * @memberof ImagesGet200Response
     */
    images?: Array<ImagesGet200ResponseImagesInner>;
}

/**
 * Check if a given object implements the ImagesGet200Response interface.
 */
export function instanceOfImagesGet200Response(value: object): value is ImagesGet200Response {
    return true;
}

export function ImagesGet200ResponseFromJSON(json: any): ImagesGet200Response {
    return ImagesGet200ResponseFromJSONTyped(json, false);
}

export function ImagesGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImagesGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImagesGet200ResponseImagesInnerFromJSON)),
    };
}

export function ImagesGet200ResponseToJSON(json: any): ImagesGet200Response {
    return ImagesGet200ResponseToJSONTyped(json, false);
}

export function ImagesGet200ResponseToJSONTyped(value?: ImagesGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImagesGet200ResponseImagesInnerToJSON)),
    };
}

