/* tslint:disable */
/* eslint-disable */
/**
 * Hey Bible App API
 * Public API for accessing Bible app data
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApiNotesGet200ResponseOneOf1NotesInner } from './ApiNotesGet200ResponseOneOf1NotesInner';
import {
    ApiNotesGet200ResponseOneOf1NotesInnerFromJSON,
    ApiNotesGet200ResponseOneOf1NotesInnerFromJSONTyped,
    ApiNotesGet200ResponseOneOf1NotesInnerToJSON,
    ApiNotesGet200ResponseOneOf1NotesInnerToJSONTyped,
} from './ApiNotesGet200ResponseOneOf1NotesInner';

/**
 * Multiple notes response (when ID is not specified)
 * @export
 * @interface ApiNotesGet200ResponseOneOf1
 */
export interface ApiNotesGet200ResponseOneOf1 {
    /**
     * 
     * @type {Array<ApiNotesGet200ResponseOneOf1NotesInner>}
     * @memberof ApiNotesGet200ResponseOneOf1
     */
    notes?: Array<ApiNotesGet200ResponseOneOf1NotesInner>;
    /**
     * Number of notes returned
     * @type {number}
     * @memberof ApiNotesGet200ResponseOneOf1
     */
    count?: number;
    /**
     * Current offset
     * @type {number}
     * @memberof ApiNotesGet200ResponseOneOf1
     */
    offset?: number;
    /**
     * Current limit
     * @type {number}
     * @memberof ApiNotesGet200ResponseOneOf1
     */
    limit?: number;
}

/**
 * Check if a given object implements the ApiNotesGet200ResponseOneOf1 interface.
 */
export function instanceOfApiNotesGet200ResponseOneOf1(value: object): value is ApiNotesGet200ResponseOneOf1 {
    return true;
}

export function ApiNotesGet200ResponseOneOf1FromJSON(json: any): ApiNotesGet200ResponseOneOf1 {
    return ApiNotesGet200ResponseOneOf1FromJSONTyped(json, false);
}

export function ApiNotesGet200ResponseOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiNotesGet200ResponseOneOf1 {
    if (json == null) {
        return json;
    }
    return {
        
        'notes': json['notes'] == null ? undefined : ((json['notes'] as Array<any>).map(ApiNotesGet200ResponseOneOf1NotesInnerFromJSON)),
        'count': json['count'] == null ? undefined : json['count'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'limit': json['limit'] == null ? undefined : json['limit'],
    };
}

export function ApiNotesGet200ResponseOneOf1ToJSON(json: any): ApiNotesGet200ResponseOneOf1 {
    return ApiNotesGet200ResponseOneOf1ToJSONTyped(json, false);
}

export function ApiNotesGet200ResponseOneOf1ToJSONTyped(value?: ApiNotesGet200ResponseOneOf1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'notes': value['notes'] == null ? undefined : ((value['notes'] as Array<any>).map(ApiNotesGet200ResponseOneOf1NotesInnerToJSON)),
        'count': value['count'],
        'offset': value['offset'],
        'limit': value['limit'],
    };
}

